from setuptools import setup
from setuptools.extension import Extension
from Cython.Distutils import build_ext


# Remove the "-Wstrict-prototypes" compiler option, which isn't valid for C++.
import distutils.sysconfig
cfg_vars = distutils.sysconfig.get_config_vars()
if "CFLAGS" in cfg_vars:
       cfg_vars["CFLAGS"] = cfg_vars["CFLAGS"].replace("-Wstrict-prototypes", "")

COMPILER_ARGS=["-std=c++11"]
import platform

# in some OSX systems, the following extra flags are needed:
if platform.system() == 'Darwin':
    COMPILER_ARGS.extend(["-stdlib=libc++","-mmacosx-version-min=10.7"])


ext_cpu = Extension(
        "_dynet",                 # name of extension
        ["dynet.pyx"],           # filename of our Pyrex/Cython source
        language="c++",              # this causes Pyrex/Cython to create C++ source
        include_dirs=["${PROJECT_SOURCE_DIR}", # this is the location of the main dynet directory.
                      "${EIGEN3_INCLUDE_DIR}", # this is the directory where eigen is saved.
                      "${Boost_INCLUDE_DIR}"], # this is the directory where boost is.
        libraries=['dynet'],             # ditto
        library_dirs=[".","${PROJECT_BINARY_DIR}/dynet/"],
        #extra_link_args=["-L/home/yogo/Vork/Research/dynet/dynet/build/dynet"],       # if needed
        extra_compile_args=COMPILER_ARGS,
        runtime_library_dirs=["${PROJECT_BINARY_DIR}/dynet/"],
        )

ext_gpu = Extension(
        "_gdynet",                 # name of extension
        ["gdynet.pyx"],           # filename of our Pyrex/Cython source
        language="c++",              # this causes Pyrex/Cython to create C++ source
        include_dirs=["${PROJECT_SOURCE_DIR}", # this is the location of the main dynet directory.
                      "${EIGEN3_INCLUDE_DIR}", # this is the directory where eigen is saved.
                      "${Boost_INCLUDE_DIR}"], # this is the directory where boost is.
        libraries=['gdynet','dynetcuda','cublas'],             # ditto
        library_dirs=[".","${PROJECT_BINARY_DIR}/dynet/","${CUDA_CUBLAS_LIB}"],
        #extra_link_args=["-L/home/yogo/Vork/Research/dynet/dynet/build/dynet"],       # if needed
        extra_compile_args=COMPILER_ARGS,
        runtime_library_dirs=["${PROJECT_BINARY_DIR}/dynet/"],
        )

TARGET = [ext_cpu]

if "${WITH_CUDA_BACKEND}"=="1": # if cuda requested
    TARGET.append(ext_gpu)

setup(ext_modules = TARGET,
        cmdclass = {'build_ext': build_ext},
        name="dyNET",
        py_modules = ['dynet','dynet_viz'],
)
